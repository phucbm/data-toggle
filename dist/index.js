/*!
 * @phucbm/data-toggle 0.0.3
 * https://github.com/phucbm/data-toggle
 *
 * @license MIT
 */
var b=(c={})=>{let r={selector:"[data-toggle]",toggleAttribute:"data-toggle",elementAttribute:"data-toggle-element",defaultTarget:document.documentElement,defaultElementSelector:"",preventDefault:"auto",debug:false,debounceDelay:0,...c};c.toggleAttribute&&!c.selector&&(r.selector=`[${c.toggleAttribute}]`);let g=false,i=new WeakMap,l=(...n)=>{r.debug&&console.log("[DataToggle]",...n);},m=(n,t)=>{let e;return o=>{let a=o.currentTarget,s={...o,currentTarget:a,preventDefault:()=>o.preventDefault()};clearTimeout(e),e=window.setTimeout(()=>{n(s);},t);}},E=()=>r.defaultTarget?true:(console.error("[DataToggle] Default target element not found"),false),v=n=>{let t=n.getAttribute(r.elementAttribute);if(t){let e=document.querySelector(t);return e||(console.warn(`[DataToggle] Target element not found for selector: ${t}`),null)}if(r.defaultElementSelector){let e=document.querySelector(r.defaultElementSelector);if(e)return e}return r.defaultTarget},u=n=>{if(g)return;let t=n.currentTarget;if(!t){l("No current target found in event");return}let e=t.getAttribute(r.toggleAttribute);if(!e?.trim()){l(`No class name found in ${r.toggleAttribute} attribute`);return}let o=r.preventDefault;o==="auto"&&(o=t.tagName==="A"||t.tagName==="BUTTON"),o&&n.preventDefault();let a=v(t);if(!a)return;let s=a.classList.contains(e);a.classList.toggle(e),l(`Toggled class "${e}" on`,a,s?"OFF":"ON");let T=new CustomEvent("datatoggle",{detail:{className:e,target:a,trigger:t,active:!s}});document.dispatchEvent(T);},d=()=>{if(E())try{let n=document.querySelectorAll(r.selector);if(n.length===0){l(`No toggle elements found with selector: ${r.selector}`);return}let t=r.debounceDelay>0?m(u,r.debounceDelay):u;n.forEach(e=>{let o=i.get(e);o&&e.removeEventListener("click",o),e.addEventListener("click",t),i.set(e,t);}),l(`Bound events to ${n.length} elements`);}catch(n){console.error("[DataToggle] Error binding events:",n);}},f=()=>{try{document.querySelectorAll(r.selector).forEach(t=>{let e=i.get(t);e&&(t.removeEventListener("click",e),i.delete(t));}),l("Unbound all events");}catch(n){console.error("[DataToggle] Error unbinding events:",n);}};return d(),{destroy(){if(g){l("Instance already destroyed");return}f(),g=true,l("Instance destroyed - all event listeners removed");},toggle(n,t){if(g){console.warn("[DataToggle] Cannot toggle on destroyed instance");return}if(!n?.trim()){console.warn("[DataToggle] Invalid class name provided");return}let e;if(t){let s=document.querySelector(t);if(!s){console.warn(`[DataToggle] Element not found for selector: ${t}`);return}e=s;}else e=r.defaultTarget;let o=e.classList.contains(n);e.classList.toggle(n),l(`Programmatically toggled "${n}" on`,e,o?"OFF":"ON");let a=new CustomEvent("datatoggle",{detail:{className:n,target:e,trigger:null,active:!o}});document.dispatchEvent(a);},isActive(n,t){if(g)return console.warn("[DataToggle] Cannot check state on destroyed instance"),false;let e;if(t){let o=document.querySelector(t);if(!o)return console.warn(`[DataToggle] Element not found for selector: ${t}`),false;e=o;}else e=r.defaultTarget;return e.classList.contains(n)},refresh(){if(g){console.warn("[DataToggle] Cannot refresh destroyed instance");return}l("Refreshing instance - rescanning for new toggle elements"),f(),d();}}};export{b as createDataToggle};//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map